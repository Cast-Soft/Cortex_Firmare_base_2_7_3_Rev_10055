###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V6.40.1.53790/W32 for ARM     19/Mar/2019  16:48:06 #
# Copyright 1999-2012 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  thumb                                                    #
#    Endian       =  little                                                   #
#    Source file  =  C:\Users\User\Documents\Cortex_git\BLKT-01.git\RevJ\RevJ #
#                     Beacon\firmware\common\STM32F10x_StdPeriph_Driver\src\m #
#                    isc.c                                                    #
#    Command line =  "C:\Users\User\Documents\Cortex_git\BLKT-01.git\RevJ\Rev #
#                    J Beacon\firmware\common\STM32F10x_StdPeriph_Driver\src\ #
#                    misc.c" -D BEACON_APP -D USE_STDPERIPH_DRIVER -D         #
#                    STM32F10X_CL -D COOS -D USE_MY_ASSERT -D BC_HW_REVJ -D   #
#                    _DEBUG -D BOOTLOADER -D EE_M24C02 -D TASKS_PROFILE -D    #
#                    BATTERY_CHECK -D CCA_EN_NO -D NEW_BEACON -D USE_TIM4 -D  #
#                    WDT_ENABLE -D OLD_CONFIG -D CIRCULAR_LOG -lcN            #
#                    "C:\Users\User\Documents\Cortex_git\BLKT-01.git\RevJ\Rev #
#                    J Beacon\firmware\beacon\IAR\Debug-Bootloader\List\" -o  #
#                    "C:\Users\User\Documents\Cortex_git\BLKT-01.git\RevJ\Rev #
#                    J Beacon\firmware\beacon\IAR\Debug-Bootloader\Obj\"      #
#                    --no_cse --no_unroll --no_inline --no_code_motion        #
#                    --no_tbaa --no_clustering --no_scheduling --debug        #
#                    --endian=little --cpu=Cortex-M3 -e --fpu=None            #
#                    --dlib_config "C:\Program Files (x86)\IAR                #
#                    Systems\Embedded Workbench 6.4\arm\INC\c\DLib_Config_Nor #
#                    mal.h" -I "C:\Users\User\Documents\Cortex_git\BLKT-01.gi #
#                    t\RevJ\RevJ Beacon\firmware\beacon\IAR\..\App\" -I       #
#                    "C:\Users\User\Documents\Cortex_git\BLKT-01.git\RevJ\Rev #
#                    J Beacon\firmware\beacon\IAR\..\..\common\CMSIS\CM3\Devi #
#                    ceSupport\ST\STM32F10x\" -I                              #
#                    "C:\Users\User\Documents\Cortex_git\BLKT-01.git\RevJ\Rev #
#                    J Beacon\firmware\beacon\IAR\..\..\common\STM32F10x_StdP #
#                    eriph_Driver\inc\" -I "C:\Users\User\Documents\Cortex_gi #
#                    t\BLKT-01.git\RevJ\RevJ Beacon\firmware\beacon\IAR\..\.. #
#                    \common\CoOS\kernel\" -I "C:\Users\User\Documents\Cortex #
#                    _git\BLKT-01.git\RevJ\RevJ Beacon\firmware\beacon\IAR\.. #
#                    \..\common\CoOS\portable\" -I                            #
#                    "C:\Users\User\Documents\Cortex_git\BLKT-01.git\RevJ\Rev #
#                    J Beacon\firmware\beacon\IAR\..\..\..\common\" -I        #
#                    "C:\Users\User\Documents\Cortex_git\BLKT-01.git\RevJ\Rev #
#                    J Beacon\firmware\beacon\IAR\..\..\common\USB-Device-CDC #
#                    \" -I "C:\Users\User\Documents\Cortex_git\BLKT-01.git\Re #
#                    vJ\RevJ Beacon\firmware\beacon\IAR\..\..\common\" -I     #
#                    "C:\Users\User\Documents\Cortex_git\BLKT-01.git\RevJ\Rev #
#                    J Beacon\firmware\beacon\IAR\" -On --use_c++_inline -I   #
#                    "C:\Program Files (x86)\IAR Systems\Embedded Workbench   #
#                    6.4\arm\CMSIS\Include\"                                  #
#    List file    =  C:\Users\User\Documents\Cortex_git\BLKT-01.git\RevJ\RevJ #
#                     Beacon\firmware\beacon\IAR\Debug-Bootloader\List\misc.l #
#                    st                                                       #
#    Object file  =  C:\Users\User\Documents\Cortex_git\BLKT-01.git\RevJ\RevJ #
#                     Beacon\firmware\beacon\IAR\Debug-Bootloader\Obj\misc.o  #
#                                                                             #
#                                                                             #
###############################################################################

C:\Users\User\Documents\Cortex_git\BLKT-01.git\RevJ\RevJ Beacon\firmware\common\STM32F10x_StdPeriph_Driver\src\misc.c
      1          /**
      2            ******************************************************************************
      3            * @file    misc.c
      4            * @author  MCD Application Team
      5            * @version V3.5.0
      6            * @date    11-March-2011
      7            * @brief   This file provides all the miscellaneous firmware functions (add-on
      8            *          to CMSIS functions).
      9            ******************************************************************************
     10            * @attention
     11            *
     12            * THE PRESENT FIRMWARE WHICH IS FOR GUIDANCE ONLY AIMS AT PROVIDING CUSTOMERS
     13            * WITH CODING INFORMATION REGARDING THEIR PRODUCTS IN ORDER FOR THEM TO SAVE
     14            * TIME. AS A RESULT, STMICROELECTRONICS SHALL NOT BE HELD LIABLE FOR ANY
     15            * DIRECT, INDIRECT OR CONSEQUENTIAL DAMAGES WITH RESPECT TO ANY CLAIMS ARISING
     16            * FROM THE CONTENT OF SUCH FIRMWARE AND/OR THE USE MADE BY CUSTOMERS OF THE
     17            * CODING INFORMATION CONTAINED HEREIN IN CONNECTION WITH THEIR PRODUCTS.
     18            *
     19            * <h2><center>&copy; COPYRIGHT 2011 STMicroelectronics</center></h2>
     20            ******************************************************************************
     21            */
     22          
     23          /* Includes ------------------------------------------------------------------*/
     24          #include "misc.h"
     25          
     26          /** @addtogroup STM32F10x_StdPeriph_Driver
     27            * @{
     28            */
     29          
     30          /** @defgroup MISC 
     31            * @brief MISC driver modules
     32            * @{
     33            */
     34          
     35          /** @defgroup MISC_Private_TypesDefinitions
     36            * @{
     37            */
     38          
     39          /**
     40            * @}
     41            */
     42          
     43          /** @defgroup MISC_Private_Defines
     44            * @{
     45            */
     46          
     47          #define AIRCR_VECTKEY_MASK    ((uint32_t)0x05FA0000)
     48          /**
     49            * @}
     50            */
     51          
     52          /** @defgroup MISC_Private_Macros
     53            * @{
     54            */
     55          
     56          /**
     57            * @}
     58            */
     59          
     60          /** @defgroup MISC_Private_Variables
     61            * @{
     62            */
     63          
     64          /**
     65            * @}
     66            */
     67          
     68          /** @defgroup MISC_Private_FunctionPrototypes
     69            * @{
     70            */
     71          
     72          /**
     73            * @}
     74            */
     75          
     76          /** @defgroup MISC_Private_Functions
     77            * @{
     78            */
     79          
     80          /**
     81            * @brief  Configures the priority grouping: pre-emption priority and subpriority.
     82            * @param  NVIC_PriorityGroup: specifies the priority grouping bits length. 
     83            *   This parameter can be one of the following values:
     84            *     @arg NVIC_PriorityGroup_0: 0 bits for pre-emption priority
     85            *                                4 bits for subpriority
     86            *     @arg NVIC_PriorityGroup_1: 1 bits for pre-emption priority
     87            *                                3 bits for subpriority
     88            *     @arg NVIC_PriorityGroup_2: 2 bits for pre-emption priority
     89            *                                2 bits for subpriority
     90            *     @arg NVIC_PriorityGroup_3: 3 bits for pre-emption priority
     91            *                                1 bits for subpriority
     92            *     @arg NVIC_PriorityGroup_4: 4 bits for pre-emption priority
     93            *                                0 bits for subpriority
     94            * @retval None
     95            */
     96          void NVIC_PriorityGroupConfig(uint32_t NVIC_PriorityGroup) {
     97              /* Check the parameters */
     98              assert_param(IS_NVIC_PRIORITY_GROUP(NVIC_PriorityGroup));
     99          
    100              /* Set the PRIGROUP[10:8] bits according to NVIC_PriorityGroup value */
    101              SCB->AIRCR = AIRCR_VECTKEY_MASK | NVIC_PriorityGroup;
    102          }
    103          
    104          /**
    105            * @brief  Initializes the NVIC peripheral according to the specified
    106            *         parameters in the NVIC_InitStruct.
    107            * @param  NVIC_InitStruct: pointer to a NVIC_InitTypeDef structure that contains
    108            *         the configuration information for the specified NVIC peripheral.
    109            * @retval None
    110            */
    111          void NVIC_Init(NVIC_InitTypeDef *NVIC_InitStruct) {
    112              uint32_t tmppriority = 0x00, tmppre = 0x00, tmpsub = 0x0F;
    113          
    114              /* Check the parameters */
    115              assert_param(IS_FUNCTIONAL_STATE(NVIC_InitStruct->NVIC_IRQChannelCmd));
    116              assert_param(IS_NVIC_PREEMPTION_PRIORITY(NVIC_InitStruct->NVIC_IRQChannelPreemptionPriority));
    117              assert_param(IS_NVIC_SUB_PRIORITY(NVIC_InitStruct->NVIC_IRQChannelSubPriority));
    118          
    119              if (NVIC_InitStruct->NVIC_IRQChannelCmd != DISABLE) {
    120                  /* Compute the Corresponding IRQ Priority --------------------------------*/
    121                  tmppriority = (0x700 - ((SCB->AIRCR) &(uint32_t)0x700)) >> 0x08;
    122                  tmppre = (0x4 - tmppriority);
    123                  tmpsub = tmpsub >> tmppriority;
    124          
    125                  tmppriority = (uint32_t)NVIC_InitStruct->NVIC_IRQChannelPreemptionPriority << tmppre;
    126                  tmppriority |= NVIC_InitStruct->NVIC_IRQChannelSubPriority & tmpsub;
    127                  tmppriority = tmppriority << 0x04;
    128          
    129                  NVIC->IP[NVIC_InitStruct->NVIC_IRQChannel] = tmppriority;
    130          
    131                  /* Enable the Selected IRQ Channels --------------------------------------*/
    132                  NVIC->ISER[NVIC_InitStruct->NVIC_IRQChannel >> 0x05] =
    133                      (uint32_t)0x01 << (NVIC_InitStruct->NVIC_IRQChannel &(uint8_t)0x1F);
    134              } else {
    135                  /* Disable the Selected IRQ Channels -------------------------------------*/
    136                  NVIC->ICER[NVIC_InitStruct->NVIC_IRQChannel >> 0x05] =
    137                      (uint32_t)0x01 << (NVIC_InitStruct->NVIC_IRQChannel &(uint8_t)0x1F);
    138              }
    139          }
    140          
    141          /**
    142            * @brief  Sets the vector table location and Offset.
    143            * @param  NVIC_VectTab: specifies if the vector table is in RAM or FLASH memory.
    144            *   This parameter can be one of the following values:
    145            *     @arg NVIC_VectTab_RAM
    146            *     @arg NVIC_VectTab_FLASH
    147            * @param  Offset: Vector Table base offset field. This value must be a multiple 
    148            *         of 0x200.
    149            * @retval None
    150            */
    151          void NVIC_SetVectorTable(uint32_t NVIC_VectTab, uint32_t Offset) {
    152              /* Check the parameters */
    153              assert_param(IS_NVIC_VECTTAB(NVIC_VectTab));
    154              assert_param(IS_NVIC_OFFSET(Offset));
    155          
    156              SCB->VTOR = NVIC_VectTab | (Offset &(uint32_t)0x1FFFFF80);
    157          }
    158          
    159          /**
    160            * @brief  Selects the condition for the system to enter low power mode.
    161            * @param  LowPowerMode: Specifies the new mode for the system to enter low power mode.
    162            *   This parameter can be one of the following values:
    163            *     @arg NVIC_LP_SEVONPEND
    164            *     @arg NVIC_LP_SLEEPDEEP
    165            *     @arg NVIC_LP_SLEEPONEXIT
    166            * @param  NewState: new state of LP condition. This parameter can be: ENABLE or DISABLE.
    167            * @retval None
    168            */
    169          void NVIC_SystemLPConfig(uint8_t LowPowerMode, FunctionalState NewState) {
    170              /* Check the parameters */
    171              assert_param(IS_NVIC_LP(LowPowerMode));
    172              assert_param(IS_FUNCTIONAL_STATE(NewState));
    173          
    174              if (NewState != DISABLE) {
    175                  SCB->SCR |= LowPowerMode;
    176              } else {
    177                  SCB->SCR &= (uint32_t)(~(uint32_t)LowPowerMode);
    178              }
    179          }
    180          
    181          /**
    182            * @brief  Configures the SysTick clock source.
    183            * @param  SysTick_CLKSource: specifies the SysTick clock source.
    184            *   This parameter can be one of the following values:
    185            *     @arg SysTick_CLKSource_HCLK_Div8: AHB clock divided by 8 selected as SysTick clock source.
    186            *     @arg SysTick_CLKSource_HCLK: AHB clock selected as SysTick clock source.
    187            * @retval None
    188            */
    189          void SysTick_CLKSourceConfig(uint32_t SysTick_CLKSource) {
    190              /* Check the parameters */
    191              assert_param(IS_SYSTICK_CLK_SOURCE(SysTick_CLKSource));
    192          
    193              if (SysTick_CLKSource == SysTick_CLKSource_HCLK) {
    194                  SysTick->CTRL |= SysTick_CLKSource_HCLK;
    195              } else {
    196                  SysTick->CTRL &= SysTick_CLKSource_HCLK_Div8;
    197              }
    198          }
    199          
    200          /**
    201            * @}
    202            */
    203          
    204          /**
    205            * @}
    206            */
    207          
    208          /**
    209            * @}
    210            */
    211          
    212          /******************* (C) COPYRIGHT 2011 STMicroelectronics *****END OF FILE****/

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       16  NVIC_Init
        0  NVIC_PriorityGroupConfig
        0  NVIC_SetVectorTable
        0  NVIC_SystemLPConfig
        0  SysTick_CLKSourceConfig


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable4
       4  ??DataTable4_1
       4  ??DataTable4_2
       4  ??DataTable4_3
       4  ??DataTable4_4
       4  ??DataTable4_5
       4  ??DataTable4_6
       4  ??DataTable4_7
       4  ??DataTable4_8
     104  NVIC_Init
      10  NVIC_PriorityGroupConfig
      12  NVIC_SetVectorTable
      34  NVIC_SystemLPConfig
      32  SysTick_CLKSourceConfig

 
 228 bytes in section .text
 
 228 bytes of CODE memory

Errors: none
Warnings: none
