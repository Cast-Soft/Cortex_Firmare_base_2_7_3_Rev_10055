###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V6.40.1.53790/W32 for ARM     19/Mar/2019  16:30:50 #
# Copyright 1999-2012 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  thumb                                                    #
#    Endian       =  little                                                   #
#    Source file  =  C:\Users\User\Documents\Cortex_git\BLKT-01.git\RevJ\RevJ #
#                     Beacon\firmware\beacon\App\config.c                     #
#    Command line =  "C:\Users\User\Documents\Cortex_git\BLKT-01.git\RevJ\Rev #
#                    J Beacon\firmware\beacon\App\config.c" -D BEACON_APP -D  #
#                    USE_STDPERIPH_DRIVER -D STM32F10X_CL -D COOS -D          #
#                    USE_MY_ASSERT -D BC_HW_REVJ -D _DEBUG -D BOOTLOADER -D   #
#                    EE_M24C02 -D TASKS_PROFILE -D BATTERY_CHECK -D           #
#                    CCA_EN_NO -D NEW_BEACON -D USE_TIM4 -D WDT_ENABLE -D     #
#                    OLD_CONFIG -D CIRCULAR_LOG -lcN                          #
#                    "C:\Users\User\Documents\Cortex_git\BLKT-01.git\RevJ\Rev #
#                    J Beacon\firmware\beacon\IAR\Debug-Bootloader-RevJ\List\ #
#                    " -o "C:\Users\User\Documents\Cortex_git\BLKT-01.git\Rev #
#                    J\RevJ Beacon\firmware\beacon\IAR\Debug-Bootloader-RevJ\ #
#                    Obj\" --no_cse --no_unroll --no_inline --no_code_motion  #
#                    --no_tbaa --no_clustering --no_scheduling --debug        #
#                    --endian=little --cpu=Cortex-M3 -e --fpu=None            #
#                    --dlib_config "C:\Program Files (x86)\IAR                #
#                    Systems\Embedded Workbench 6.4\arm\INC\c\DLib_Config_Nor #
#                    mal.h" -I "C:\Users\User\Documents\Cortex_git\BLKT-01.gi #
#                    t\RevJ\RevJ Beacon\firmware\beacon\IAR\..\App\" -I       #
#                    "C:\Users\User\Documents\Cortex_git\BLKT-01.git\RevJ\Rev #
#                    J Beacon\firmware\beacon\IAR\..\..\common\CMSIS\CM3\Devi #
#                    ceSupport\ST\STM32F10x\" -I                              #
#                    "C:\Users\User\Documents\Cortex_git\BLKT-01.git\RevJ\Rev #
#                    J Beacon\firmware\beacon\IAR\..\..\common\STM32F10x_StdP #
#                    eriph_Driver\inc\" -I "C:\Users\User\Documents\Cortex_gi #
#                    t\BLKT-01.git\RevJ\RevJ Beacon\firmware\beacon\IAR\..\.. #
#                    \common\CoOS\kernel\" -I "C:\Users\User\Documents\Cortex #
#                    _git\BLKT-01.git\RevJ\RevJ Beacon\firmware\beacon\IAR\.. #
#                    \..\common\CoOS\portable\" -I                            #
#                    "C:\Users\User\Documents\Cortex_git\BLKT-01.git\RevJ\Rev #
#                    J Beacon\firmware\beacon\IAR\..\..\..\common\" -I        #
#                    "C:\Users\User\Documents\Cortex_git\BLKT-01.git\RevJ\Rev #
#                    J Beacon\firmware\beacon\IAR\..\..\common\USB-Device-CDC #
#                    \" -I "C:\Users\User\Documents\Cortex_git\BLKT-01.git\Re #
#                    vJ\RevJ Beacon\firmware\beacon\IAR\..\..\common\" -I     #
#                    "C:\Users\User\Documents\Cortex_git\BLKT-01.git\RevJ\Rev #
#                    J Beacon\firmware\beacon\IAR\" -On --use_c++_inline -I   #
#                    "C:\Program Files (x86)\IAR Systems\Embedded Workbench   #
#                    6.4\arm\CMSIS\Include\"                                  #
#    List file    =  C:\Users\User\Documents\Cortex_git\BLKT-01.git\RevJ\RevJ #
#                     Beacon\firmware\beacon\IAR\Debug-Bootloader-RevJ\List\c #
#                    onfig.lst                                                #
#    Object file  =  C:\Users\User\Documents\Cortex_git\BLKT-01.git\RevJ\RevJ #
#                     Beacon\firmware\beacon\IAR\Debug-Bootloader-RevJ\Obj\co #
#                    nfig.o                                                   #
#                                                                             #
#                                                                             #
###############################################################################

C:\Users\User\Documents\Cortex_git\BLKT-01.git\RevJ\RevJ Beacon\firmware\beacon\App\config.c
      1          #include "VersionNo.h"
      2          
      3          #include <stm32f10x.h>
      4          #include <string.h>
      5          #include "config.h"
      6          #include "i2c_ee.h"
      7          #include "packets.h"
      8          
      9          #include "flash_map.h"
     10          
     11          uint16_t offsetDelta = 0;                       // Could be overridden by T.K. sync packet
     12          
     13          config_t  backup_config = {
     14              //.size = sizeof(beacon_config_t) - sizeof(uint16_t)*2,
     15              //.checksum = 3, //TODO
     16              .config_version = CURRENT_CONFIG_VERSION,
     17              .productID      = 0xBC10,
     18              .serialNum      = 0x444,
     19              .panId          = 0x23,
     20              .mySrcAddr      = 0x5678,
     21              .routerDstAddr      = 0xABCD,
     22              .ledOnOffs      = 52000,
     23              .ledOffOffs     = 4000,
     24              .ledDAC         = 3840,
     25              .rfChan         = 15,
     26              .rfTimeSlot     = 2,
     27              .led0Id         = 0xFE,
     28              .led1Id         = 0xFD,
     29              .led2Id         = 0xFB,
     30              .TestMode       = 0x00,
     31              .TxLevel        = 8,
     32              .radioPacketFlags          = 0xFF,
     33              .led0IdPattern = 0xFFFFFFFF,
     34              .led1IdPattern = 0xFFFFFFFE,
     35              .led2IdPattern = 0xFFFFFFFD,
     36              .led0Index     = 1,
     37              .led1Index     = 2,
     38              .led2Index     = 3,
     39              .frameBits = 8,
     40          #ifndef OLD_CONFIG
     41              .imuSlots =      0xFFFF,
     42              .debounce_time = 4, //40 millisec
     43              .doubleclick_time = 5      // 500 millisec
     44          #endif
     45              .dummyPad   = 0xFF,
     46              .flags      =
     47          #ifdef _DEBUG
     48                            FLAG_TRACE_ENABLE |
     49          #else
     50          
     51          #endif
     52                FLAG_FRAMEID_24BITS | FLAG_TRACE_USE_PROTO_CMD_LINE_RESP,
     53              .time_adjust = 0,
     54              .frameCountNoSync   = DEFAULT_FRAME_COUNT_NO_SYNC
     55          };
     56          
     57          static uint16_t CalcConfigChecksum(ex_config_t *config) {
     58              uint16_t checksum = 0xCCCC; // checksum initialization
     59          
     60              // checksum is last half-word in struct
     61              // checksum field not included in checksum
     62              uint8_t *p = (uint8_t*) config;
     63              for (uint16_t i = 0; i < (sizeof(*config)/2 - 1); i++) {
     64          
     65                  checksum ^= (i ^ (*p)++);
     66              }
     67              return checksum;
     68          }
     69          
     70          void CopyConfigToExConfig(config_t *config, ex_config_t *exConfig)
     71          {
     72            memcpy( (uint8_t*) &exConfig->productID, (uint8_t*) &config->productID, sizeof(*exConfig) - sizeof(uint16_t));
     73            exConfig->size = sizeof(*exConfig);
     74            exConfig->checksum = CalcConfigChecksum(exConfig);
     75          }
     76          
     77          /* returns 0 if no changes */
     78          int CopyExConfigToConfig(ex_config_t *exConfig, config_t *config)
     79          {
     80            int8_t ret = memcmp((uint8_t*) &exConfig->productID, (uint8_t*) &config->productID, sizeof(*exConfig) - sizeof(uint16_t));
     81            if ( ret != 0) {
     82              memcpy((uint8_t*) &config->productID, (uint8_t*) &exConfig->productID, sizeof(*exConfig) - sizeof(uint16_t));
     83            }
     84            return ret;
     85          }
     86          
     87          void LoadConfig(config_t *config)
     88          {
     89            uint16_t key = 0;
     90            I2C_EE_BufferRead((uint8_t*) &key, EEPROM_CONFIG_ADDRESS, sizeof(uint16_t));
     91            if (key != 0xFFFF &&  key != 0 && !IS_VALID_CONFIG_KEY(key)) { // old format
     92              ex_config_t old_config;
     93              I2C_EE_BufferRead((uint8_t*) &old_config, EEPROM_CONFIG_ADDRESS, sizeof(old_config));
     94              CopyExConfigToConfig(&old_config, config);
     95          
     96              config->config_version = CURRENT_CONFIG_VERSION;
     97              config->flags =
     98          #ifdef _DEBUG
     99                            FLAG_TRACE_ENABLE |
    100          #else
    101          
    102          #endif
    103                FLAG_FRAMEID_24BITS | FLAG_TRACE_USE_PROTO_CMD_LINE_RESP;
    104              config->time_adjust = 0;
    105              config->frameCountNoSync   = DEFAULT_FRAME_COUNT_NO_SYNC;
    106          
    107              SaveConfig(config);
    108            } else if (key == CURRENT_CONFIG_VERSION) {
    109              I2C_EE_BufferRead((uint8_t*) config, EEPROM_CONFIG_ADDRESS, sizeof(*config));
    110            } else {
    111              memcpy(config, (void *)&backup_config, sizeof(*config));
    112              SaveConfig(config);
    113            }
    114          }
    115          
    116          void SaveConfig(config_t *config)
    117          {
    118              config->written_by_ver =    (THIS_MAJOR << 24) |
    119                                          (THIS_MINOR << 16) |
    120                                          (THIS_PATCH << 8) |
    121                                          ((char)THIS_REVISION);          // Revision low 8 byte only
    122          
    123              I2C_EE_BufferWrite((uint8_t*) config, EEPROM_CONFIG_ADDRESS, sizeof(*config));
    124          }
    125          

Errors: 3
Warnings: 8
