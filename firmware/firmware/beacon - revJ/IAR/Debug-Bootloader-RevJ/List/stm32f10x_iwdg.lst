###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V6.40.1.53790/W32 for ARM     29/Oct/2019  16:43:14 #
# Copyright 1999-2012 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  thumb                                                    #
#    Endian       =  little                                                   #
#    Source file  =  C:\Users\kmak\Documents\Cortex_Git\BLKT-01\Source        #
#                    Code\BLKT-01 Beacon\Source\firmware\common\STM32F10x_Std #
#                    Periph_Driver\src\stm32f10x_iwdg.c                       #
#    Command line =  "C:\Users\kmak\Documents\Cortex_Git\BLKT-01\Source       #
#                    Code\BLKT-01 Beacon\Source\firmware\common\STM32F10x_Std #
#                    Periph_Driver\src\stm32f10x_iwdg.c" -D BEACON_APP -D     #
#                    USE_STDPERIPH_DRIVER -D STM32F10X_CL -D COOS -D          #
#                    USE_MY_ASSERT -D _DEBUG -D BOOTLOADER -D EE_M24C02 -D    #
#                    TASKS_PROFILE -D BATTERY_CHECK -D CCA_EN_NO -D           #
#                    NEW_BEACON -D USE_TIM4 -D WDT_ENABLE -D OLD_CONFIG -D    #
#                    CIRCULAR_LOG -D BC_HW_REVJ -lcN                          #
#                    "C:\Users\kmak\Documents\Cortex_Git\BLKT-01\Source       #
#                    Code\BLKT-01 Beacon\Source\firmware\beacon -             #
#                    revJ\IAR\Debug-Bootloader-RevJ\List\" -o                 #
#                    "C:\Users\kmak\Documents\Cortex_Git\BLKT-01\Source       #
#                    Code\BLKT-01 Beacon\Source\firmware\beacon -             #
#                    revJ\IAR\Debug-Bootloader-RevJ\Obj\" --no_cse            #
#                    --no_unroll --no_inline --no_code_motion --no_tbaa       #
#                    --no_clustering --no_scheduling --debug --endian=little  #
#                    --cpu=Cortex-M3 -e --fpu=None --dlib_config "C:\Program  #
#                    Files (x86)\IAR Systems\Embedded Workbench               #
#                    6.4\arm\INC\c\DLib_Config_Normal.h" -I                   #
#                    "C:\Users\kmak\Documents\Cortex_Git\BLKT-01\Source       #
#                    Code\BLKT-01 Beacon\Source\firmware\beacon -             #
#                    revJ\IAR\..\App\" -I "C:\Users\kmak\Documents\Cortex_Git #
#                    \BLKT-01\Source Code\BLKT-01                             #
#                    Beacon\Source\firmware\beacon -                          #
#                    revJ\IAR\..\..\common\CMSIS\CM3\DeviceSupport\ST\STM32F1 #
#                    0x\" -I "C:\Users\kmak\Documents\Cortex_Git\BLKT-01\Sour #
#                    ce Code\BLKT-01 Beacon\Source\firmware\beacon -          #
#                    revJ\IAR\..\..\common\STM32F10x_StdPeriph_Driver\inc\"   #
#                    -I "C:\Users\kmak\Documents\Cortex_Git\BLKT-01\Source    #
#                    Code\BLKT-01 Beacon\Source\firmware\beacon -             #
#                    revJ\IAR\..\..\common\CoOS\kernel\" -I                   #
#                    "C:\Users\kmak\Documents\Cortex_Git\BLKT-01\Source       #
#                    Code\BLKT-01 Beacon\Source\firmware\beacon -             #
#                    revJ\IAR\..\..\common\CoOS\portable\" -I                 #
#                    "C:\Users\kmak\Documents\Cortex_Git\BLKT-01\Source       #
#                    Code\BLKT-01 Beacon\Source\firmware\beacon -             #
#                    revJ\IAR\..\..\..\common\" -I                            #
#                    "C:\Users\kmak\Documents\Cortex_Git\BLKT-01\Source       #
#                    Code\BLKT-01 Beacon\Source\firmware\beacon -             #
#                    revJ\IAR\..\..\common\USB-Device-CDC\" -I                #
#                    "C:\Users\kmak\Documents\Cortex_Git\BLKT-01\Source       #
#                    Code\BLKT-01 Beacon\Source\firmware\beacon -             #
#                    revJ\IAR\..\..\common\" -I "C:\Users\kmak\Documents\Cort #
#                    ex_Git\BLKT-01\Source Code\BLKT-01                       #
#                    Beacon\Source\firmware\beacon - revJ\IAR\" -On           #
#                    --use_c++_inline -I "C:\Program Files (x86)\IAR          #
#                    Systems\Embedded Workbench 6.4\arm\CMSIS\Include\"       #
#    List file    =  C:\Users\kmak\Documents\Cortex_Git\BLKT-01\Source        #
#                    Code\BLKT-01 Beacon\Source\firmware\beacon -             #
#                    revJ\IAR\Debug-Bootloader-RevJ\List\stm32f10x_iwdg.lst   #
#    Object file  =  C:\Users\kmak\Documents\Cortex_Git\BLKT-01\Source        #
#                    Code\BLKT-01 Beacon\Source\firmware\beacon -             #
#                    revJ\IAR\Debug-Bootloader-RevJ\Obj\stm32f10x_iwdg.o      #
#                                                                             #
#                                                                             #
###############################################################################

C:\Users\kmak\Documents\Cortex_Git\BLKT-01\Source Code\BLKT-01 Beacon\Source\firmware\common\STM32F10x_StdPeriph_Driver\src\stm32f10x_iwdg.c
      1          /**
      2            ******************************************************************************
      3            * @file    stm32f10x_iwdg.c
      4            * @author  MCD Application Team
      5            * @version V3.5.0
      6            * @date    11-March-2011
      7            * @brief   This file provides all the IWDG firmware functions.
      8            ******************************************************************************
      9            * @attention
     10            *
     11            * THE PRESENT FIRMWARE WHICH IS FOR GUIDANCE ONLY AIMS AT PROVIDING CUSTOMERS
     12            * WITH CODING INFORMATION REGARDING THEIR PRODUCTS IN ORDER FOR THEM TO SAVE
     13            * TIME. AS A RESULT, STMICROELECTRONICS SHALL NOT BE HELD LIABLE FOR ANY
     14            * DIRECT, INDIRECT OR CONSEQUENTIAL DAMAGES WITH RESPECT TO ANY CLAIMS ARISING
     15            * FROM THE CONTENT OF SUCH FIRMWARE AND/OR THE USE MADE BY CUSTOMERS OF THE
     16            * CODING INFORMATION CONTAINED HEREIN IN CONNECTION WITH THEIR PRODUCTS.
     17            *
     18            * <h2><center>&copy; COPYRIGHT 2011 STMicroelectronics</center></h2>
     19            ******************************************************************************
     20            */
     21          
     22          /* Includes ------------------------------------------------------------------*/
     23          #include "stm32f10x_iwdg.h"
     24          
     25          /** @addtogroup STM32F10x_StdPeriph_Driver
     26            * @{
     27            */
     28          
     29          /** @defgroup IWDG 
     30            * @brief IWDG driver modules
     31            * @{
     32            */
     33          
     34          /** @defgroup IWDG_Private_TypesDefinitions
     35            * @{
     36            */
     37          
     38          /**
     39            * @}
     40            */
     41          
     42          /** @defgroup IWDG_Private_Defines
     43            * @{
     44            */
     45          
     46          /* ---------------------- IWDG registers bit mask ----------------------------*/
     47          
     48          /* KR register bit mask */
     49          #define KR_KEY_Reload    ((uint16_t)0xAAAA)
     50          #define KR_KEY_Enable    ((uint16_t)0xCCCC)
     51          
     52          /**
     53            * @}
     54            */
     55          
     56          /** @defgroup IWDG_Private_Macros
     57            * @{
     58            */
     59          
     60          /**
     61            * @}
     62            */
     63          
     64          /** @defgroup IWDG_Private_Variables
     65            * @{
     66            */
     67          
     68          /**
     69            * @}
     70            */
     71          
     72          /** @defgroup IWDG_Private_FunctionPrototypes
     73            * @{
     74            */
     75          
     76          /**
     77            * @}
     78            */
     79          
     80          /** @defgroup IWDG_Private_Functions
     81            * @{
     82            */
     83          
     84          /**
     85            * @brief  Enables or disables write access to IWDG_PR and IWDG_RLR registers.
     86            * @param  IWDG_WriteAccess: new state of write access to IWDG_PR and IWDG_RLR registers.
     87            *   This parameter can be one of the following values:
     88            *     @arg IWDG_WriteAccess_Enable: Enable write access to IWDG_PR and IWDG_RLR registers
     89            *     @arg IWDG_WriteAccess_Disable: Disable write access to IWDG_PR and IWDG_RLR registers
     90            * @retval None
     91            */
     92          
     93          void IWDG_WriteAccessCmd(uint16_t IWDG_WriteAccess) {
     94              /* Check the parameters */
     95              assert_param(IS_IWDG_WRITE_ACCESS(IWDG_WriteAccess));
     96              IWDG->KR = IWDG_WriteAccess;
     97          }
     98          
     99          /**
    100            * @brief  Sets IWDG Prescaler value.
    101            * @param  IWDG_Prescaler: specifies the IWDG Prescaler value.
    102            *   This parameter can be one of the following values:
    103            *     @arg IWDG_Prescaler_4: IWDG prescaler set to 4
    104            *     @arg IWDG_Prescaler_8: IWDG prescaler set to 8
    105            *     @arg IWDG_Prescaler_16: IWDG prescaler set to 16
    106            *     @arg IWDG_Prescaler_32: IWDG prescaler set to 32
    107            *     @arg IWDG_Prescaler_64: IWDG prescaler set to 64
    108            *     @arg IWDG_Prescaler_128: IWDG prescaler set to 128
    109            *     @arg IWDG_Prescaler_256: IWDG prescaler set to 256
    110            * @retval None
    111            */
    112          void IWDG_SetPrescaler(uint8_t IWDG_Prescaler) {
    113              /* Check the parameters */
    114              assert_param(IS_IWDG_PRESCALER(IWDG_Prescaler));
    115              IWDG->PR = IWDG_Prescaler;
    116          }
    117          
    118          /**
    119            * @brief  Sets IWDG Reload value.
    120            * @param  Reload: specifies the IWDG Reload value.
    121            *   This parameter must be a number between 0 and 0x0FFF.
    122            * @retval None
    123            */
    124          void IWDG_SetReload(uint16_t Reload) {
    125              /* Check the parameters */
    126              assert_param(IS_IWDG_RELOAD(Reload));
    127              IWDG->RLR = Reload;
    128          }
    129          
    130          /**
    131            * @brief  Reloads IWDG counter with value defined in the reload register
    132            *   (write access to IWDG_PR and IWDG_RLR registers disabled).
    133            * @param  None
    134            * @retval None
    135            */
    136          void IWDG_ReloadCounter(void) {
    137              IWDG->KR = KR_KEY_Reload;
    138          }
    139          
    140          /**
    141            * @brief  Enables IWDG (write access to IWDG_PR and IWDG_RLR registers disabled).
    142            * @param  None
    143            * @retval None
    144            */
    145          void IWDG_Enable(void) {
    146              IWDG->KR = KR_KEY_Enable;
    147          }
    148          
    149          /**
    150            * @brief  Checks whether the specified IWDG flag is set or not.
    151            * @param  IWDG_FLAG: specifies the flag to check.
    152            *   This parameter can be one of the following values:
    153            *     @arg IWDG_FLAG_PVU: Prescaler Value Update on going
    154            *     @arg IWDG_FLAG_RVU: Reload Value Update on going
    155            * @retval The new state of IWDG_FLAG (SET or RESET).
    156            */
    157          FlagStatus IWDG_GetFlagStatus(uint16_t IWDG_FLAG) {
    158              FlagStatus bitstatus = RESET;
    159              /* Check the parameters */
    160              assert_param(IS_IWDG_FLAG(IWDG_FLAG));
    161          
    162              if ((IWDG->SR & IWDG_FLAG) != (uint32_t)RESET) {
    163                  bitstatus = SET;
    164              } else {
    165                  bitstatus = RESET;
    166              }
    167              /* Return the flag status */
    168              return bitstatus;
    169          }
    170          
    171          /**
    172            * @}
    173            */
    174          
    175          /**
    176            * @}
    177            */
    178          
    179          /**
    180            * @}
    181            */
    182          
    183          /******************* (C) COPYRIGHT 2011 STMicroelectronics *****END OF FILE****/

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
        0  IWDG_Enable
        0  IWDG_GetFlagStatus
        0  IWDG_ReloadCounter
        0  IWDG_SetPrescaler
        0  IWDG_SetReload
        0  IWDG_WriteAccessCmd


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable5
       4  ??DataTable5_1
       4  ??DataTable5_2
       4  ??DataTable5_3
      10  IWDG_Enable
      28  IWDG_GetFlagStatus
      10  IWDG_ReloadCounter
       8  IWDG_SetPrescaler
       8  IWDG_SetReload
       8  IWDG_WriteAccessCmd

 
 88 bytes in section .text
 
 88 bytes of CODE memory

Errors: none
Warnings: none
